//============================================================================
// Author      : Ganesh
// EmailId     : ganeshiitrcse@gmail.com
// City        : Bhopal
//============================================================================

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct tree_node {
	int data;
	tree_node * left_node;
	tree_node* right_node;
};

struct tree_node* create_tree_node(int data) {
	struct tree_node* new_node = (tree_node *) (malloc(sizeof(tree_node)));
	new_node->left_node = NULL;
	new_node->right_node = NULL;
	new_node->data = data;
	return new_node;
}

struct tree_node* build_segment_tree(int arr[], int start, int end) {
	tree_node* new_node = create_tree_node(0);
	if (start == end || start > end) {
		cout << "Start == End " << start << " " << end << endl;
		new_node->left_node = NULL;
		new_node->right_node = NULL;
		new_node->data = arr[start];

	} else {
		int mid = start + ((end - start) / 2);
		cout << "Start " << start << " End " << end << " Mid " << mid << endl;
		new_node->left_node = build_segment_tree(arr, start, mid);
		new_node->right_node = build_segment_tree(arr, mid + 1, end);
		new_node->data = new_node->left_node->data + new_node->right_node->data;

	}
	return new_node;
}

void print_sum_segment_tree(struct tree_node* root) {
	if (root == NULL)
		return;
	else {
		print_sum_segment_tree(root->left_node);
		print_sum_segment_tree(root->right_node);
		cout << root->data << " ";
	}
}
int main() {

	int arr[] = { 1, 3, 5, 7, 9, 11, 13, 15, 16 };
	int start_index = 0;
	int end_index = sizeof(arr) / sizeof(int);

	cout << "Start: " << start_index << " End: " << end_index << endl;
	struct tree_node* root = build_segment_tree(arr, start_index,
			end_index - 1);
	print_sum_segment_tree(root);

	return 0;
}
